<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Recipe App</title>
    <link rel="stylesheet" href="/css/homePage.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />
  </head>

  <body>
    <header>
      <nav>
        <img src="/images/logo.jpg" alt="Recipe App Logo" />

        <form>
          <input
            type="text"
            placeholder="Search for Recipe"
            class="searchBox"
          />
          <button type="submit" class="searchBtn">Search</button>
        </form>
        <button type="button" id="addRecipeButton">
          <a href="/create"></a>Add New Recipe <i class="fas fa-plus"></i>
        </button>
        <button type="button" id="viewRecipe">
          <a href="/read"></a>My Recipes
        </button>
      </nav>
    </header>
    <main>
      <section>
        <div class="recipe-container">
          <h2>Search for your favourite Recipes......</h2>
        </div>
        <div class="recipe-details">
          <button type="button" class="recipe-close-btn">
            <i class="fas fa-times"></i>
          </button>
          <div class="recipe-details-content"></div>
        </div>
      </section>
    </main>
    <script>
      const searchBox = document.querySelector(".searchBox");
      const searchBtn = document.querySelector(".searchBtn");
      const recipeContainer = document.querySelector(".recipe-container");
      const recipeDetailsContent = document.querySelector(
        ".recipe-details-content"
      );
      const recipeCloseBtn = document.querySelector(".recipe-close-btn");
      // const recipeListContainer = document.querySelector('.recipe-list-container');
      //function to get recipes
      const fetchRecipes = async (query) => {
        try {
          recipeContainer.innerHTML = "<h2>Fetching Recipes......</h2>";
          const data = await fetch(
            `https://www.themealdb.com/api/json/v1/1/search.php?s=${query}`
          );
          const response = await data.json();

          //creating div element
          recipeContainer.innerHTML = "";
          response.meals.forEach((meal) => {
            const recipeDiv = document.createElement("div");
            recipeDiv.classList.add("recipe");
            recipeDiv.innerHTML = `
        <img src="${meal.strMealThumb}">
        <h3>${meal.strMeal}</h3>
        <p><span>${meal.strArea}</span> Dish</p>
        <p>Belongs to <span>${meal.strCategory}</span> Category</p>
        `;
            //creating button
            const button = document.createElement("button");
            button.textContent = "View Recipe";
            recipeDiv.appendChild(button);

            // Adding event listner to recipe button
            button.addEventListener("click", () => {
              openRecipePopup(meal);
            });

            recipeContainer.appendChild(recipeDiv);
          });
        } catch (error) {
          recipeContainer.innerHTML =
            "<h2>Sorry!!! This Recipes is not available</h2>";
        }
      };

      //function to fetch ingredients and measurements
      const fetchIngredients = (meal) => {
        let ingredientsList = "";
        for (let i = 1; i <= 20; i++) {
          const ingredient = meal[`strIngredient${i}`];
          if (ingredient) {
            const measure = meal[`strMeasure${i}`];
            ingredientsList += `<li>${measure} ${ingredient}</li>`;
          } else {
            break;
          }
        }
        return ingredientsList;
      };
      const openRecipePopup = (meal) => {
        recipeDetailsContent.innerHTML = `
        <h2 class="recipeName">${meal.strMeal}</h2>
        <h3>Ingrediants:</h3>
        <ul class="ingredientList">${fetchIngredients(meal)}</ul>
        <div class="recipeInstructions">
            <h3>Instructions:</h3>
            <p >${meal.strInstructions}</p>
        </div>
    `;
        recipeDetailsContent.parentElement.style.display = "block";
      };

      recipeCloseBtn.addEventListener("click", () => {
        recipeDetailsContent.parentElement.style.display = "none";
      });

      searchBtn.addEventListener("click", (e) => {
        e.preventDefault(); //prevent from auto submit
        const searchInput = searchBox.value.trim();
        if (!searchInput) {
          recipeContainer.innerHTML = `<h2>Type the meal in the search box.</h2>`;
          return;
        }
        fetchRecipes(searchInput);
      });

      const addRecipeButton = document.getElementById("addRecipeButton");

      // Add a click event listener to the button
      addRecipeButton.addEventListener("click", function () {
        // Redirect the user to the "addRecipe.html" page
        window.location.href = "/create";
      });

      
      const viewRecipe = document.getElementById("viewRecipe");

      // Add a click event listener to the button
      viewRecipe.addEventListener("click", function () {
        window.location.href = "/read";
      });
    </script>
  </body>
</html>
